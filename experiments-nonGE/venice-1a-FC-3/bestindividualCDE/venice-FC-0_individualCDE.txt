## Scenario settings
Scenario.name = Venice-seed-%%MovementModel.rngSeed%%
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 43200s == 12h, 57600 = 16h
Scenario.endTime = 18000
# MOVEMENT MODEL
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = [1437322135; 1437322136; 1437322137; 1437322138; 1437322139; 1437322140; 1437322141; 1437322142; 1437322143; 1437322144]
#MovementModel.rngSeed = 42

# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 2500, 2500

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 15

# High speed, long range, interface for more powerful nodes (boats)
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 100

Scenario.nrofHostGroups = 3
## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement

# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.waitTime = 0, 120
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

# group1 (pedestrians) specific settings
Group1.groupID = P
Group1.router = FirstContactRouter
#Group1.router = EpidemicRouter
#Group1.router = SprayAndWaitRouter
#SprayAndWaitRouter.nrofCopies = 10
#SprayAndWaitRouter.binaryMode = true
#Group1.router = MaxPropRouter
Group1.okMaps = 1
Group1.bufferSize = 5M
Group1.speed = 0.5, 1.5
Group1.nrofHosts = 150
Group1.nrofInterfaces = 1
Group1.interface1 = btInterface

# group2 (water boats) specific settings
Group2.groupID = W
Group2.router = FirstContactRouter
#Group2.router = EpidemicRouter
#Group2.router = SprayAndWaitRouter
#Group2.router = MaxPropRouter
Group2.okMaps = 2
Group2.bufferSize = 50M
Group2.speed = 1.0, 5.0
Group2.nrofHosts = 49
Group2.nrofInterfaces = 2
Group2.interface1 = btInterface
Group2.interface2 = highspeedInterface

# START CODE GENERATED BY uGP
# VEHICLE BLACKHOLE attacker specific settings
Group3.groupID = VB
Group3.router = PassiveRouter
Group3.okMaps = 2
Group3.bufferSize = 50M
Group3.speed = 2.7, 13.9
Group3.nrofHosts = 1
Group3.nrofInterfaces = 2
Group3.interface1 = btInterface
Group3.interface2 = highspeedInterface
# END CODE GENERATED BY uGP

## Map based movement - movement model specific settings
MapBasedMovement.nrofMapFiles = 2
MapBasedMovement.mapFile1 = data/venice-pedestrian.wkt
MapBasedMovement.mapFile2 = data/venice-water.wkt

# Define POI data files
PointsOfInterest.poiFile1 = data/venice-pedestrian-poi.wkt
PointsOfInterest.poiFile2 = data/venice-water-poi.wkt

# START CODE GENERATED BY uGP
PointsOfInterest.poiFile3 = data/individualCDE_vehicle_black_hole_0.wkt
# END CODE GENERATED BY uGP

# Define probabilities for different groups selecting POIs from different POI files
Group1.pois = 1,0.3
Group2.pois = 2,0.2

# START CODE GENERATED BY uGP
Group3.pois = 3,1
# END CODE GENERATED BY uGP

## Message creation parameters 
# How many event generators
Events.nrof = 1

Events1.class = MessageEventGenerator
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 30,30
# Message sizes (B)
Events1.size = 10k,10k
# range of message source/destination addresses
Events1.hosts = 0,199
# Message ID prefix
Events1.prefix = M

#Events2.class = MessageEventGenerator
#Events2.interval = 3,3
#Events2.size = 100k,100k
#Events2.tohosts = 0,0
#Events2.hosts = 1,1
#Events2.prefix = F

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = DeliveredMessagesReport
#Report.report3 = EventLogReport

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

## GUI settings

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
